
<% if (errors && errors.length >0 ) {%>
<div id="messages">
<ul class="error" >
<% for (var i=0; i<errors.length;i++) {%>
  <li><span class="errlabel" data-index="<%= (typeof errors[i]["index"] === "undefined")  ? '' : ''+errors[i]["index"]   %>" ><%= errors[i].param %></span> <span><%= errors[i].msg %></span></li>
<% }%>
</ul>
</div>
<% }%>

<form id="moduleForm" enctype="multipart/form-data" action="/modules<%= module["_id"] ? "/"+ident : "" %>" method="POST">
  <div class="formblock">
    <fieldset>
    <input type="hidden" name="_method" value="<%= method %>">
    <input type="hidden" name="_id"  >
    <div>
      <div class="required"><label for="name">Name</label><input type="text" name="name"></div>
    </div>
    <label for="icon">Icon</label><input type="file" name="icon" ><div id="deleteIconDiv"><input type="checkbox" name="deleteIcon"><label for="deleteIcon">delete icon</label></div>
    <img class="brand-icon" >
    <div class="required"><label for="entity">Entity</label>
      <select id="entity" name="entity" >
        <% [ 'unknown','tweet', 'ip', 'url', 'rssItem', 'domain', 'hash', 'user'].forEach(function(entity){ %>
          <option><%= entity %></option>
        <%});%>
      </select>
    </div>
    <div class="required inline"><label for="type">Type</label>
      <select id="type" name="type" editable="<%= module["_id"] ? "false" : "true" %>" >
        <option>spout</option>
        <option>bolt</option>
        <option>drain</option>
      </select>
    </div>
    <div class="required inline"><label for="parallel">Allows parallel processing</label><input type="checkBox" name="parallel" checked></div>
    </fieldset>
    <div>
    <%if (current_user.isAdmin() && module["_id"]){ %>
      <label for="status">Status</label>
      <select name="status">
        <% [ 'pending', 'developing', 'published', 'private', 'deleted'].forEach(function(status){ %>
        <option><%= status %></option>
        <%});%>
      </select>
    <%} else if ( module["_id"]){ %>
      <% var statusList = ['published', 'private'] %>
      <% if (statusList.indexOf(module.status) < 0) {%>
        <% statusList = [module.status]%>
      <%}%>
      <label for="status">Status</label>
      <select name="status">
        <% statusList.forEach(function(status){ %>
        <option><%= status %></option>
        <%});%>
      </select>
    <%}%>
    </div>
    <div id="langDiv" style="display:<%= current_user.sourceType==='Local' ? 'inline':'block' %>;" class="required"><label for="language">Language</label>
      <select id="language" name="language" >
        <% [ 'Java','Python'].forEach(function(language){ %>
        <option><%= language %></option>
        <%});%>
      </select>
    </div>
    <div style="display:<%= current_user.sourceType==='All' ? 'inline':'none' %>;" class="required" ><label for="sourceType">Source type</label>
      <select id="sourceType" name="sourceType" >
        <% ['Gist'].forEach(function(sourceType){ %>
        <option><%= sourceType %></option>
        <%});%>
      </select>
    </div>
    <div style="display:<%= (current_user.sourceType ==='All' || current_user.sourceType === 'Gist') ? 'inline':'none' %>;" class="required url-gist"><label for="codeURL">Code URL</label><input type="text" name="codeURL"></div><div style="display:none;" class="show-code-container"><a href="#" title="Template" class="template-link show-code"><%= current_user.sourceType==='Local' ? 'Source code':'Template' %></a></div>
    <div><label for="description">Description</label><textarea style="display:block;height: 100px;width: 400px;" maxlength="500" name="description"></textarea></div>
    <div class="fields"><label>Fields</label><a href="#" class="addField">Add</a></div>
    <div class="ticktuple"><label>Ticktuple</label><a href="#" class="addField">Add</a></div>
    <div class="libraries"><label>Libraries</label><a href="#" class="addLibrary">Add</a></div>
    <div style="display:inline;" ></div>
    <div style="display:none;" >
      <textarea id="sourceCode" name="sourceCode"></textarea>
    </div>
    <input style="float:left;" class="button" type="submit" value="Create" />
    <% if ( module["_id"]){ %>
    <input style="float:right;cursor:pointer;" type="button" value="Update Source Code" class="button orange source-changed" data-name="<%= module.name %>" />
    <%}%>
    </div>
  </div>
</form>
<div style="display:none" >
  <form>
    <div id="fieldRow">
      <div class="add-fields" >
        <label for="field[name]">Name</label><input type="text" name="field[name]">
        <label for="field[label]">Label</label><input type="text" name="field[label]">
        <label for="field[type]">Type</label>
        <select name="field[type]" class="field-type">
          <option>string</option>
          <option>list</option>
          <option>number</option>
          <option>integer</option>
          <option>boolean</option>
          <option>url</option>
        </select>
        <label for="field[required]">Required</label>
        <select name="field[required]">
          <option value="false">No</option>
          <option value="true">Yes</option>
        </select>
        <div class="allows-variables">
          <label for="field[wirable]">Allows Variables</label>
          <select name="field[wirable]">
            <option value="false">No</option>
            <option value="true">Yes</option>
          </select>
        </div>
        <div class="element-type">
          <label for="field[elementType]">Element type</label>
          <select name="field[elementType]">
            <option value="text">Text</option>
            <option value="keyValue">Key-Value</option>
            <option value="keyValueDefault">Key-Value-Default</option>
            <option value="fieldOther">Two-Fields</option>
          </select>
        </div>
        <a href="#" class="removeField">remove</a>
      </div>
    </div>
    <div id="ticktupleRow">
      <div class="add-fields" >
        <label for="field[name]">Name: tickTuple</label><input type="hidden" name="field[name]" value="tickTuple">
        <label for="field[label]">Label</label><input type="text" name="field[label]">
        <label for="field[type]">Type:</label>
        <select name="field[type]">
          <option>integer</option>
        </select>

        <label for="field[wirable]">Allows Variables</label>
        <select name="field[wirable]">
          <option value="false">No</option>
          <option value="true">Yes</option>
        </select>
        <a href="#" class="removeField">remove</a>
      </div>
    </div>
    <div id="libraryRow">
      <div class="add-fields" >
        <label for="library[name]">Name</label><input type="text" name="library[name]">
        <label for="library[url]">Url</label><input type="text" name="library[url]">
        <a href="#" class="removeLibrary">remove</a>
      </div>
    </div>
  </form>
</div>
<div style="display:none;" class="ajax-loading"><div class="ajax-loading-fade"></div></div>

<script type='text/javascript'>

  var module = <%- JSON.stringify(module) %>;
  var loadModuleInForm = function (module) {
    var container = module.container;
    if (container) {
      $("input[name='_id']").val(container["_id"]);
      $("input[name='name']").val(module["name"]);
      $("select[name='type']").val(container["type"]);
      $("select[name='sourceType']").val(module["sourceType"]);
      $("textarea[name='sourceCode']").val(module["sourceCode"]);
      $("input[name='codeURL']").val(container["codeURL"]);
      $("textarea[name='description']").val(container["description"]);
      $("select[name='status']").val(module["status"]);
      $("select[name='entity']").val(module["entity"]);
      $("select[name='language']").val(module["language"]);
      $(".fields div").remove();
      $(".libraries div").remove();
      if (module.singleton)
      {
        $("input[name='parallel']").attr('checked', false);
      }
      if (container.brandIcon)
      {
        $(".brand-icon").attr("src",container.brandIcon);
      }
      for (var i = 0; i < container.fields.length; i++) {
        if (container.fields[i].name == "tickTuple") {
          var field = $("#ticktupleRow div").clone();
          field.find("input[name='field[label]']").val(container.fields[i].label);
          field.find("select[name='field[wirable]']").val(container.fields[i].wirable ? "true" : "false" );
          field.appendTo($(".ticktuple"));
          $(".ticktuple .addField").hide();
        }
        else {
          var field = $("#fieldRow>div").clone();
          field.find("input[name='field[name]']").val(container.fields[i].name);
          field.find("input[name='field[label]']").val(container.fields[i].label);
          field.find("select[name='field[type]']").val(container.fields[i].type);
          field.find("select[name='field[wirable]']").val(String(!!container.fields[i].wirable));
          field.find("select[name='field[required]']").val(container.fields[i].required ? "true" : "false");
          field.find("select[name='field[elementType]']").val((container.fields[i].elementType && container.fields[i].elementType.name) ? container.fields[i].elementType.name : "text");
          if (container.fields[i].type === 'list')
          {
            field.find('.allows-variables').toggle(false);
            field.find('.element-type').toggle(true);
          }
          field.appendTo($(".fields"));
        }
      }
      if (container.libraries) {
        for (var i = 0; i < container.libraries.length; i++) {
          var field = $("#libraryRow div").clone();
          field.find("input[name='library[name]']").val(container.libraries[i].name);
          field.find("input[name='library[url]']").val(container.libraries[i].url);
          field.appendTo($(".libraries"));
        }
      }

      if (module._id) {
        $("input[name='name']").attr('readonly', true);
        var valType = $("select[name='type']").val();
        $("select[name='type'] option").each(function () {
          if ($(this).val() != valType) {
            $(this).remove();
          }
        });
        //$("select[name='type']").attr('disabled', true);
        $("input[type='submit']").val("Update");
        $(".show-code-container").toggle(false);
      }

    }
    if (!module._id)
    {
      $(".show-code-container").toggle(true);
      $("#deleteIconDiv").toggle(false);
    }
  }

  loadModuleInForm(module);

  var redesign = function(name)
  {
    var parsed = name.split(".");
    var result = "";
    for (var i=(parsed.length - 1);i>=0;i--)
    {
      if (result != "")
      {
        result = parsed[i]+"["+result+"]";
      }
      else
      {
        result = parsed[i];
      }
    }
    return result;
  }

  var changeSource = function(name,ignoreWarnings) {
    var url ='/modules/'+name+'/sourcechange.json';
    $(".ajax-loading" ).fadeOut(100).fadeIn( 500 );
    var params = {name: name};
    if (ignoreWarnings)
    {
      params.ignoreWarnings = "true";
    }
    $.post( url,params).done(function(data) {
      $(".ajax-loading" ).hide( );
      if (data.result == "warning") {
        if( confirm("The module has some warnings:\n"+data.responseJSON.description) )
        {
          return changeSource(name,true);
        }
      } else {
        setStatusComboPending();
        alert( "module "+name+" source change notified" );
      }
    }).fail(function(result) {
      $(".ajax-loading" ).hide( );
      alert("Error compiling module:\n"+result.responseJSON.description+"\n"+(result.responseJSON.detail || ""));
    });
  }

  var setStatusComboPending = function()
  {
    $status = $("select[name='status']");
    if ($status.find("option[value='pending']").length == 0)
    {
      $status.html("<option>pending</option>");
    }
    else
    {
      $status.val('pending');
    }
  }
  var validateSource = function(name,ignoreWarnings) {
    var url ='/modules/'+name+'/requestvalidation.json';
    $(".ajax-loading" ).fadeOut(100).fadeIn( 500 );
    var params = {name: name};
    if (ignoreWarnings)
    {
      params.ignoreWarnings = "true";
    }
    $.post( url, params).done(function(data) {
      $(".ajax-loading" ).hide( );
      if (data.result == "warning") {
        if( confirm("The module has some warnings:\n"+data.responseJSON.description) )
        {
          return validateSource(name,true);
        }
      } else {
        setStatusComboPending();
        alert("module " + name + " validation requested");
      }
    }).fail(function(result) {
      $(".ajax-loading" ).hide( );
      alert("Error compiling module:\n"+result.responseJSON.description+"\n"+(result.responseJSON.detail || ""));
    });
  }

  function readURL(input) {

    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function (e) {
        $('.brand-icon').attr('src', e.target.result);
        $('.img-avatar').toggle(true);
        $('.img-avatar img.delete').toggle(false);
      }

      reader.readAsDataURL(input.files[0]);

    }

  }

  $( function(){
    $(".fields").on("click",".addField",function(){
      $("#fieldRow>div").clone().appendTo($(".fields"));
      return false;
    });
    $(".ticktuple").on("click",".addField",function(){
      $(".ticktuple .addField").hide();
      $("#ticktupleRow div").clone().appendTo($(".ticktuple"));
      return false;
    });

    $(".libraries").on("click",".addLibrary",function(){
      $("#libraryRow div").clone().appendTo($(".libraries"));
      return false;
    });


    $(".fields").on("click",".removeField",function(){
      $(this).closest("div").remove();
    });

    $(".ticktuple").on("click",".removeField",function(){
      $(this).closest("div").remove();
      $(".ticktuple .addField").show();
    });

    $(".libraries").on("click",".removeLibrary",function(){
      $(this).closest("div").remove();
    });

    $(".source-changed").unbind("click").click(function()
    {
      var name = $(this).data("name");
      var confirmation = confirm("Do you want to notify source change in module "+name+"?");
      if (confirmation)
      {
        changeSource(name);
      }
      return false;
    });

    $("select[name='status']").change(function(){
      if ($("select[name='status']").val() == 'developing')
      {
        $(".source-changed").val("Send Validation Request");
        $(".source-changed").unbind("click").click(function()
        {
          var name = $(this).data("name");
          var confirmation = confirm("Do you want to request for validation of source code of module "+name+"?");
          if (confirmation)
          {
            validateSource(name);
          }
          return false;
        });

      }
      else
      {
        $(".source-changed").val("Update Source Code");
        $(".source-changed").unbind("click").click(function()
        {
          var name = $(this).data("name");
          var confirmation = confirm("Do you want to notify source change in module "+name+"?");
          if (confirmation)
          {
            changeSource(name);
          }
          return false;
        });

      }
    });
    $("select[name='status']").trigger('change');

    $(".errlabel").each(function(){
      var name = $(this).html();

     var changeLabel = $("label[for='"+redesign(name)+"']");
     var change = $("input[name='"+redesign(name)+"']");
     var index = ""+ $(this).data("index");
     var indexInfo = "";
     if (index != '')
     {
       $(change.get(parseInt(index))).addClass("error");
       indexInfo="["+index+"]";
     }
     else
     {
       change.addClass("error");
     }

      if (changeLabel.length > 0)
        $(this).html(changeLabel.html()+indexInfo+": ");
    });

    var setSourceInfo = function(elem)
    {
      if ($(elem).val() == 'Gist')
      {
        $(".url-gist").toggle(true);
        var templateInfo = "Copy the content of template and paste it in Gist, and then set the url of your new gist"
        $(".show-code-container").attr("title",templateInfo);
        $(".show-code").attr("title",templateInfo).html("Template");
      }
      else
      {
        $(".url-gist").toggle(false);
        var sourceCodeInfo = "You can change the source code, or edit it later from module detail";
        $(".show-code-container").attr("title",sourceCodeInfo);
        $(".show-code").attr("title",sourceCodeInfo).html("Source code");
      }
    }
    $(".show-code-container").tooltip();
    setSourceInfo($("select[name='sourceType']").get(0));
    $("select[name='sourceType']").change(function(){setSourceInfo(this);});
    $(".fields").on('change',".field-type",function(){
      var $allowDiv = $(this).closest('div').find(".allows-variables");
      $allowDiv.toggle($(this).val() !== 'list');
      var $elementDiv = $(this).closest('div').find(".element-type");
      $elementDiv.toggle($(this).val() === 'list');
    });

    $("input[name=icon]").change(function(){
      readURL(this);
    });

  });
</script>
